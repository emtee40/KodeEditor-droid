apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'

group = rootProject.ext.group

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    namespace 'de.markusressel.kodeeditor.library'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.25.0'

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.annotation:annotation:1.5.0'

    implementation "androidx.compose.ui:ui:1.2.1"
    implementation "androidx.compose.material:material:1.2.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.2.1"

    debugImplementation "androidx.compose.ui:ui-tooling:1.2.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.2.1"

    // RxFlow
    implementation "io.github.reactivecircus.flowbinding:flowbinding-android:$flowBindingVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

    // Syntax Highlighting
    api("com.github.markusressel.KodeHighlighter:core:$kodeHighlighterVersion") {
        changing = true
    }

    debugImplementation "com.github.markusressel.KodeHighlighter:markdown:$kodeHighlighterVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // Zoom Layout Container
    api 'com.otaliastudios:zoomlayout:1.9.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task dokkaJar(type: Jar, dependsOn: dokkaHtml) {
    classifier = 'javadoc'
    from dokkaHtml.outputDirectory
}

dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

artifacts {
    archives sourcesJar
    archives dokkaJar
}
